---
# tasks file for ansible-role-tomb

- name: Load platform specific variables
  include_vars: "{{ ansible_distribution }}.yml"

- name: install necessary tools
  package: name={{ item }} state=installed
  with_items: "{{ tomb_necessary_tools }}"

- name: Check for existing tomb binary
  stat:
    path: "{{tomb_install_directory}}/{{tomb_name}}"
  register: st

- name: Get latest version info
  uri:
    url: "{{tomb_package_meta_json}}"
    method: GET
    return_content: "yes"
  register: latest_version_info

- name: Squash the latest version into a fact for re-use
  set_fact:
    tomb_latest_version: "{{(latest_version_info.content|from_json|first).name}}"

- name: Build download url
  set_fact:
    tomb_dl_version: "{{ tomb_version | replace('v','') }}"
    tomb_full_url: "{{ tomb_base_url }}/old-releases"
  when:
    - tomb_version != tomb_latest_version
    - tomb_version != "latest"

- name: Build download url
  set_fact:
    tomb_dl_version: "{{ tomb_latest_version | replace('v','')}}"
    tomb_full_url: "{{ tomb_base_url }}"
  when: tomb_version == "latest" or tomb_version == tomb_latest_version

- name: Check tomb version
  shell: |
    grep 'VERSION="{{ tomb_dl_version }}"' {{tomb_install_directory}}/{{tomb_name}}
  register: ver
  when: st.stat.exists
  failed_when: false
  changed_when: false
  tags:
    - skip_ansible_lint

- name: Download and install Tomb
  import_tasks: install.yml
  when: ver|failed or not st.stat.exists
